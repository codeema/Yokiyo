# Generated by Django 3.0.6 on 2020-05-22 15:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=2000)),
                ('blogimage', models.ImageField(upload_to='blogimages/')),
                ('postDate', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-postDate'],
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facilityimage', models.ImageField(upload_to='facilityimages/')),
                ('facilityName', models.CharField(max_length=100)),
                ('facilityRoom', models.PositiveSmallIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lessonName', models.CharField(max_length=100)),
                ('lessonDescription', models.CharField(max_length=2000)),
                ('lessonimage', models.ImageField(null=True, upload_to='lessonimages/')),
                ('lessonFacility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='funolympics.Facility')),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sportName', models.CharField(max_length=100)),
                ('sportimage', models.ImageField(upload_to='sportimages/')),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('venueimage', models.ImageField(upload_to='venueimages/')),
                ('venueName', models.CharField(max_length=100)),
                ('venueLocation', models.CharField(max_length=50, null=True)),
                ('venueCapacity', models.PositiveSmallIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduleDate', models.DateTimeField(auto_now_add=True)),
                ('eventName', models.CharField(max_length=100)),
                ('scheduleFacility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='funolympics.Facility')),
                ('scheduleLesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='funolympics.Lesson')),
                ('scheduleVenue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='funolympics.Venue')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500)),
                ('avatar', models.ImageField(upload_to='profilepic/')),
                ('currentLocation', models.TextField(blank=True, max_length=500)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='funolympics.Venue')),
            ],
        ),
        migrations.AddField(
            model_name='lesson',
            name='lessonSport',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='funolympics.Sport'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='lessonVenue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='funolympics.Venue'),
        ),
        migrations.AddField(
            model_name='facility',
            name='facilityLocation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='funolympics.Venue'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=2000)),
                ('postDate', models.DateTimeField(auto_now_add=True)),
                ('comment_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='funolympics.Blog')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lessonBooked', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booked', to='funolympics.Lesson')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='venue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='funolympics.Venue'),
        ),
    ]
